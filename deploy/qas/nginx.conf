user nginx;
worker_processes 1;
pid /var/run/nginx.pid;
#error_log  /home/wwwlogs/nginx_error.log  crit;



#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 65535;

events
    {
        use epoll;
        worker_connections 65535;
        multi_accept on;
    }

http
    {
	    log_format  main  '$remote_addr - $remote_user [$time_iso8601] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
		log_format  json escape=json '{ "remote_addr": "$remote_addr",'
                           '"time":"$time_iso8601",'
                           '"request_uri": "$request_uri",'
                           '"user_id": "$http_user",' # 写入之后，就能记录访问的用户了
                           '"request_method": "$request_method",'
                           '"httpversion": "$server_protocol",'
                           '"response": "$status", '
                           '"body_bytes_sent": "$body_bytes_sent", '
                           '"referrer": "$http_referer", '
                           '"user_agent": "$http_user_agent", '
                           '"server_name": "$host",'
                           '"request_time": "$request_time",'
                           '"upstream_response_time": "$upstream_response_time",'
                           '"realpath_root": "$realpath_root"}';
        include       mime.types;
        default_type  application/octet-stream;

        server_names_hash_bucket_size 128;
        client_header_buffer_size 2024k;
        large_client_header_buffers 6 1024k;
        client_max_body_size 100M;

        sendfile   on;
        tcp_nopush on;

        keepalive_timeout 1800;

        tcp_nodelay on;


        fastcgi_connect_timeout 1800;
        fastcgi_send_timeout 1800;
        fastcgi_read_timeout 1800;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 256k;

        gzip on;
        gzip_min_length  1k;
        gzip_buffers     4 16k;
        gzip_http_version 1.1;
        gzip_comp_level 4;
        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml application/xml+rss;
        gzip_vary on;
        gzip_proxied   expired no-cache no-store private auth;
        gzip_disable   "MSIE [1-6]\.";

        #limit_conn_zone $binary_remote_addr zone=perip:10m;
        ##If enable limit_conn_zone,add "limit_conn perip 10;" to server section.

        server_tokens off;
        access_log off;
		
		  #动态服务器组
 #   upstream wanxinapptomcat {
	    #ip_hash;#代表使用ip地址方式分配跳转后端服务器，同一ip请求每次都会访问同一台后端服务器
#        server 197.16.22.82:8020;
#		server 197.16.22.84:8020;
		
       
  #  }
	
	#配置代理参数
	#自定义头信息传递
    underscores_in_headers on;
    proxy_set_header CLIENT_HEADER $http_client_header;
    proxy_set_header Authorization $http_authorization;
    proxy_redirect off;
    proxy_set_header Host $host:$server_port;#这里是重点,这样配置才不会丢失端口
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #client_max_body_size 10m;
    #client_body_buffer_size 128k;
	proxy_headers_hash_max_size 51200;
    proxy_headers_hash_bucket_size 6400;
    proxy_connect_timeout 1800;
    proxy_send_timeout 1800;
    proxy_read_timeout 1800;
    proxy_buffer_size 4k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;
    #缓存配置(修改配置要求哦清除缓存)
    #proxy_cache_key '$host:$server_port$request_uri';
    #proxy_temp_file_write_size 64k;
    #proxy_temp_path /home/wwwlogs/nginx/temp;
    #proxy_cache_path /home/wwwlogs/nginx/cache levels=1:2 keys_zone=cache_one:200m inactive=5d max_size=1g;
    #proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;
	include /etc/nginx/conf.d/*.conf;

}

